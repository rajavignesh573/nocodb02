export var FormulaErrorType;
(function (FormulaErrorType) {
    FormulaErrorType["NOT_AVAILABLE"] = "NOT_AVAILABLE";
    FormulaErrorType["NOT_SUPPORTED"] = "NOT_SUPPORTED";
    FormulaErrorType["MIN_ARG"] = "MIN_ARG";
    FormulaErrorType["MAX_ARG"] = "MAX_ARG";
    FormulaErrorType["TYPE_MISMATCH"] = "TYPE_MISMATCH";
    FormulaErrorType["INVALID_ARG"] = "INVALID_ARG";
    FormulaErrorType["INVALID_ARG_TYPE"] = "INVALID_ARG_TYPE";
    FormulaErrorType["INVALID_ARG_VALUE"] = "INVALID_ARG_VALUE";
    FormulaErrorType["INVALID_ARG_COUNT"] = "INVALID_ARG_COUNT";
    FormulaErrorType["CIRCULAR_REFERENCE"] = "CIRCULAR_REFERENCE";
    FormulaErrorType["INVALID_FUNCTION_NAME"] = "INVALID_FUNCTION_NAME";
    FormulaErrorType["INVALID_COLUMN"] = "INVALID_COLUMN";
    FormulaErrorType["INVALID_SYNTAX"] = "INVALID_SYNTAX";
})(FormulaErrorType || (FormulaErrorType = {}));
export var FormulaDataTypes;
(function (FormulaDataTypes) {
    FormulaDataTypes["NUMERIC"] = "numeric";
    FormulaDataTypes["STRING"] = "string";
    FormulaDataTypes["DATE"] = "date";
    FormulaDataTypes["LOGICAL"] = "logical";
    FormulaDataTypes["ARRAY"] = "array";
    FormulaDataTypes["COND_EXP"] = "conditional_expression";
    FormulaDataTypes["NULL"] = "null";
    FormulaDataTypes["BOOLEAN"] = "boolean";
    FormulaDataTypes["INTERVAL"] = "interval";
    FormulaDataTypes["UNKNOWN"] = "unknown";
})(FormulaDataTypes || (FormulaDataTypes = {}));
export var JSEPNode;
(function (JSEPNode) {
    JSEPNode["COMPOUND"] = "Compound";
    JSEPNode["IDENTIFIER"] = "Identifier";
    JSEPNode["MEMBER_EXP"] = "MemberExpression";
    JSEPNode["LITERAL"] = "Literal";
    JSEPNode["THIS_EXP"] = "ThisExpression";
    JSEPNode["CALL_EXP"] = "CallExpression";
    JSEPNode["UNARY_EXP"] = "UnaryExpression";
    JSEPNode["BINARY_EXP"] = "BinaryExpression";
    JSEPNode["ARRAY_EXP"] = "ArrayExpression";
})(JSEPNode || (JSEPNode = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2Zvcm11bGEvZW51bXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFOLElBQVksZ0JBY1g7QUFkRCxXQUFZLGdCQUFnQjtJQUMxQixtREFBK0IsQ0FBQTtJQUMvQixtREFBK0IsQ0FBQTtJQUMvQix1Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBbUIsQ0FBQTtJQUNuQixtREFBK0IsQ0FBQTtJQUMvQiwrQ0FBMkIsQ0FBQTtJQUMzQix5REFBcUMsQ0FBQTtJQUNyQywyREFBdUMsQ0FBQTtJQUN2QywyREFBdUMsQ0FBQTtJQUN2Qyw2REFBeUMsQ0FBQTtJQUN6QyxtRUFBK0MsQ0FBQTtJQUMvQyxxREFBaUMsQ0FBQTtJQUNqQyxxREFBaUMsQ0FBQTtBQUNuQyxDQUFDLEVBZFcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQWMzQjtBQUVELE1BQU0sQ0FBTixJQUFZLGdCQVdYO0FBWEQsV0FBWSxnQkFBZ0I7SUFDMUIsdUNBQW1CLENBQUE7SUFDbkIscUNBQWlCLENBQUE7SUFDakIsaUNBQWEsQ0FBQTtJQUNiLHVDQUFtQixDQUFBO0lBQ25CLG1DQUFlLENBQUE7SUFDZix1REFBbUMsQ0FBQTtJQUNuQyxpQ0FBYSxDQUFBO0lBQ2IsdUNBQW1CLENBQUE7SUFDbkIseUNBQXFCLENBQUE7SUFDckIsdUNBQW1CLENBQUE7QUFDckIsQ0FBQyxFQVhXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFXM0I7QUFFRCxNQUFNLENBQU4sSUFBWSxRQVVYO0FBVkQsV0FBWSxRQUFRO0lBQ2xCLGlDQUFxQixDQUFBO0lBQ3JCLHFDQUF5QixDQUFBO0lBQ3pCLDJDQUErQixDQUFBO0lBQy9CLCtCQUFtQixDQUFBO0lBQ25CLHVDQUEyQixDQUFBO0lBQzNCLHVDQUEyQixDQUFBO0lBQzNCLHlDQUE2QixDQUFBO0lBQzdCLDJDQUErQixDQUFBO0lBQy9CLHlDQUE2QixDQUFBO0FBQy9CLENBQUMsRUFWVyxRQUFRLEtBQVIsUUFBUSxRQVVuQiJ9