"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RollupHelper = void 0;
const column_interface_1 = __importDefault(require("../column.interface"));
const column_helper_1 = require("../column-helper");
const helperFunctions_1 = require("../../../lib/helperFunctions");
const UITypes_1 = __importDefault(require("../../../lib/UITypes"));
const error_1 = require("../../../lib/error");
const utils_1 = require("../utils");
const is_1 = require("../../../lib/is");
class RollupHelper extends column_interface_1.default {
    constructor() {
        super(...arguments);
        this.columnDefaultMeta = {
            precision: utils_1.precisionFormats[0],
            isLocaleString: false,
        };
    }
    serializeValue(_value, params) {
        if (params.isMultipleCellPaste || params.serializeSearchQuery) {
            return undefined;
        }
        else {
            throw new error_1.ComputedTypePasteError();
        }
    }
    parseValue(value, params) {
        var _a, _b, _c;
        if (!(0, is_1.isValidValue)(value))
            return null;
        const { col, meta, metas } = params;
        const colOptions = col.colOptions;
        const relationColumnOptions = colOptions.fk_relation_column_id
            ? (_b = (_a = meta === null || meta === void 0 ? void 0 : meta.columns) === null || _a === void 0 ? void 0 : _a.find((c) => c.id === colOptions.fk_relation_column_id)) === null || _b === void 0 ? void 0 : _b.colOptions
            : null;
        const relatedTableMeta = (relationColumnOptions === null || relationColumnOptions === void 0 ? void 0 : relationColumnOptions.fk_related_model_id) &&
            (metas === null || metas === void 0 ? void 0 : metas[relationColumnOptions.fk_related_model_id]);
        const childColumn = relatedTableMeta === null || relatedTableMeta === void 0 ? void 0 : relatedTableMeta.columns.find((c) => c.id === colOptions.fk_rollup_column_id);
        if (!childColumn)
            return value;
        const renderAsTextFun = (0, helperFunctions_1.getRenderAsTextFunForUiType)(((_c = childColumn.uidt) !== null && _c !== void 0 ? _c : UITypes_1.default.SingleLineText));
        childColumn.meta = Object.assign(Object.assign({}, (0, helperFunctions_1.parseProp)(childColumn === null || childColumn === void 0 ? void 0 : childColumn.meta)), (0, helperFunctions_1.parseProp)(col === null || col === void 0 ? void 0 : col.meta));
        if (renderAsTextFun.includes(colOptions.rollup_function)) {
            childColumn.uidt = UITypes_1.default.Decimal;
        }
        return column_helper_1.ColumnHelper.parseValue(value, Object.assign(Object.assign({}, params), { col: childColumn }));
    }
    parsePlainCellValue(value, params) {
        var _a;
        return (_a = this.parseValue(value, params)) !== null && _a !== void 0 ? _a : '';
    }
}
exports.RollupHelper = RollupHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm9sbHVwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb2x1bW5IZWxwZXIvY29sdW1ucy9Sb2xsdXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsMkVBRTZCO0FBQzdCLG9EQUFnRDtBQUNoRCwyREFBK0U7QUFDL0UsNERBQW9DO0FBQ3BDLHVDQUFxRDtBQUNyRCxvQ0FBNEM7QUFDNUMsaUNBQXdDO0FBRXhDLE1BQWEsWUFBYSxTQUFRLDBCQUFvQjtJQUF0RDs7UUFDRSxzQkFBaUIsR0FBRztZQUNsQixTQUFTLEVBQUUsd0JBQWdCLENBQUMsQ0FBQyxDQUFDO1lBQzlCLGNBQWMsRUFBRSxLQUFLO1NBQ3RCLENBQUM7SUEwREosQ0FBQztJQXhEQyxjQUFjLENBQ1osTUFBVyxFQUNYLE1BQTJDO1FBRTNDLElBQUksTUFBTSxDQUFDLG1CQUFtQixJQUFJLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1lBQzlELE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxJQUFJLDhCQUFzQixFQUFFLENBQUM7UUFDckMsQ0FBQztJQUNILENBQUM7SUFFRCxVQUFVLENBQ1IsS0FBVSxFQUNWLE1BQTJDOztRQUUzQyxJQUFJLENBQUMsSUFBQSxpQkFBWSxFQUFDLEtBQUssQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRXRDLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLE1BQU0sQ0FBQztRQUVwQyxNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBd0IsQ0FBQztRQUNoRCxNQUFNLHFCQUFxQixHQUFHLFVBQVUsQ0FBQyxxQkFBcUI7WUFDNUQsQ0FBQyxDQUFFLE1BQUEsTUFBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsT0FBTywwQ0FBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssVUFBVSxDQUFDLHFCQUFxQixDQUFDLDBDQUNsRSxVQUFzQztZQUM1QyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ1QsTUFBTSxnQkFBZ0IsR0FDcEIsQ0FBQSxxQkFBcUIsYUFBckIscUJBQXFCLHVCQUFyQixxQkFBcUIsQ0FBRSxtQkFBbUI7YUFDMUMsS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFHLHFCQUFxQixDQUFDLG1CQUE2QixDQUFDLENBQUEsQ0FBQztRQUUvRCxNQUFNLFdBQVcsR0FBRyxnQkFBZ0IsYUFBaEIsZ0JBQWdCLHVCQUFoQixnQkFBZ0IsQ0FBRSxPQUFPLENBQUMsSUFBSSxDQUNoRCxDQUFDLENBQWEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxVQUFVLENBQUMsbUJBQW1CLENBQ2pDLENBQUM7UUFFNUIsSUFBSSxDQUFDLFdBQVc7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUUvQixNQUFNLGVBQWUsR0FBRyxJQUFBLDZDQUEyQixFQUNqRCxDQUFDLE1BQUEsV0FBVyxDQUFDLElBQUksbUNBQUksaUJBQU8sQ0FBQyxjQUFjLENBQVksQ0FDeEQsQ0FBQztRQUVGLFdBQVcsQ0FBQyxJQUFJLG1DQUNYLElBQUEsMkJBQVMsRUFBQyxXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLENBQUUsSUFBSSxDQUFDLEdBQzVCLElBQUEsMkJBQVMsRUFBQyxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsSUFBSSxDQUFDLENBQ3hCLENBQUM7UUFFRixJQUFJLGVBQWUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUM7WUFDekQsV0FBVyxDQUFDLElBQUksR0FBRyxpQkFBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQyxDQUFDO1FBRUQsT0FBTyw0QkFBWSxDQUFDLFVBQVUsQ0FBQyxLQUFLLGtDQUFPLE1BQU0sS0FBRSxHQUFHLEVBQUUsV0FBWSxJQUFHLENBQUM7SUFDMUUsQ0FBQztJQUVELG1CQUFtQixDQUNqQixLQUFVLEVBQ1YsTUFBMkM7O1FBRTNDLE9BQU8sTUFBQSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsbUNBQUksRUFBRSxDQUFDO0lBQzlDLENBQUM7Q0FDRjtBQTlERCxvQ0E4REMifQ==