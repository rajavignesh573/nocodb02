"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LookupHelper = void 0;
const column_interface_1 = __importDefault(require("../column.interface"));
const is_1 = require("../../../lib/is");
const column_helper_1 = require("../column-helper");
const error_1 = require("../../../lib/error");
class LookupHelper extends column_interface_1.default {
    constructor() {
        super(...arguments);
        this.columnDefaultMeta = {};
    }
    serializeValue(value, params) {
        if (params.serializeSearchQuery) {
            return this.parseValue(value, params);
        }
        if (params.isMultipleCellPaste) {
            return undefined;
        }
        else {
            throw new error_1.ComputedTypePasteError();
        }
    }
    parseValue(value, params) {
        var _a, _b;
        if (!value)
            return null;
        const { col, meta, metas } = params;
        const colOptions = col.colOptions;
        const relationColumnOptions = colOptions.fk_relation_column_id
            ? (_b = (_a = meta === null || meta === void 0 ? void 0 : meta.columns) === null || _a === void 0 ? void 0 : _a.find((c) => c.id === colOptions.fk_relation_column_id)) === null || _b === void 0 ? void 0 : _b.colOptions
            : null;
        const relatedTableMeta = (relationColumnOptions === null || relationColumnOptions === void 0 ? void 0 : relationColumnOptions.fk_related_model_id) &&
            (metas === null || metas === void 0 ? void 0 : metas[relationColumnOptions.fk_related_model_id]);
        const childColumn = relatedTableMeta === null || relatedTableMeta === void 0 ? void 0 : relatedTableMeta.columns.find((c) => c.id === colOptions.fk_lookup_column_id);
        if (!childColumn)
            return value;
        if ((0, is_1.ncIsArray)(value)) {
            return value
                .map((v) => {
                return column_helper_1.ColumnHelper.parseValue(v, Object.assign(Object.assign({}, params), { col: childColumn }));
            })
                .join(', ');
        }
        return column_helper_1.ColumnHelper.parseValue(value, Object.assign(Object.assign({}, params), { col: childColumn }));
    }
    parsePlainCellValue(value, params) {
        var _a;
        return (_a = this.parseValue(value, params)) !== null && _a !== void 0 ? _a : '';
    }
}
exports.LookupHelper = LookupHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9va3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb2x1bW5IZWxwZXIvY29sdW1ucy9Mb29rdXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsMkVBRTZCO0FBQzdCLGlDQUFxQztBQUNyQyxvREFBZ0Q7QUFDaEQsdUNBQXFEO0FBRXJELE1BQWEsWUFBYSxTQUFRLDBCQUFvQjtJQUF0RDs7UUFDRSxzQkFBaUIsR0FBRyxFQUFFLENBQUM7SUF5RHpCLENBQUM7SUF2REMsY0FBYyxDQUNaLEtBQVUsRUFDVixNQUEyQztRQUUzQyxJQUFJLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1lBQ2hDLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDeEMsQ0FBQztRQUVELElBQUksTUFBTSxDQUFDLG1CQUFtQixFQUFFLENBQUM7WUFDL0IsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLElBQUksOEJBQXNCLEVBQUUsQ0FBQztRQUNyQyxDQUFDO0lBQ0gsQ0FBQztJQUVELFVBQVUsQ0FDUixLQUFVLEVBQ1YsTUFBMkM7O1FBRTNDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFFeEIsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsTUFBTSxDQUFDO1FBRXBDLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUF3QixDQUFDO1FBQ2hELE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDLHFCQUFxQjtZQUM1RCxDQUFDLENBQUUsTUFBQSxNQUFBLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxPQUFPLDBDQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxVQUFVLENBQUMscUJBQXFCLENBQUMsMENBQ2xFLFVBQXNDO1lBQzVDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDVCxNQUFNLGdCQUFnQixHQUNwQixDQUFBLHFCQUFxQixhQUFyQixxQkFBcUIsdUJBQXJCLHFCQUFxQixDQUFFLG1CQUFtQjthQUMxQyxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUcscUJBQXFCLENBQUMsbUJBQTZCLENBQUMsQ0FBQSxDQUFDO1FBRS9ELE1BQU0sV0FBVyxHQUFHLGdCQUFnQixhQUFoQixnQkFBZ0IsdUJBQWhCLGdCQUFnQixDQUFFLE9BQU8sQ0FBQyxJQUFJLENBQ2hELENBQUMsQ0FBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLFVBQVUsQ0FBQyxtQkFBbUIsQ0FDakMsQ0FBQztRQUU1QixJQUFJLENBQUMsV0FBVztZQUFFLE9BQU8sS0FBSyxDQUFDO1FBRS9CLElBQUksSUFBQSxjQUFTLEVBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUNyQixPQUFPLEtBQUs7aUJBQ1QsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7Z0JBQ1QsT0FBTyw0QkFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDLGtDQUFPLE1BQU0sS0FBRSxHQUFHLEVBQUUsV0FBWSxJQUFHLENBQUM7WUFDdEUsQ0FBQyxDQUFDO2lCQUNELElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQixDQUFDO1FBRUQsT0FBTyw0QkFBWSxDQUFDLFVBQVUsQ0FBQyxLQUFLLGtDQUFPLE1BQU0sS0FBRSxHQUFHLEVBQUUsV0FBWSxJQUFHLENBQUM7SUFDMUUsQ0FBQztJQUVELG1CQUFtQixDQUNqQixLQUFVLEVBQ1YsTUFBMkM7O1FBRTNDLE9BQU8sTUFBQSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsbUNBQUksRUFBRSxDQUFDO0lBQzlDLENBQUM7Q0FDRjtBQTFERCxvQ0EwREMifQ==