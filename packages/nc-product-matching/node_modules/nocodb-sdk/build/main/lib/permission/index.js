"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPermissionOptionValue = exports.getPermissionIcon = exports.getPermissionLabel = exports.getPermissionOption = exports.PermissionMeta = exports.PermissionRoleMap = exports.PermissionRolePower = exports.PermissionOptions = exports.PermissionOptionValue = exports.PermissionRole = exports.PermissionEntity = exports.PermissionGrantedType = exports.PermissionKey = void 0;
const enums_1 = require("../enums");
var PermissionKey;
(function (PermissionKey) {
    PermissionKey["TABLE_RECORD_ADD"] = "TABLE_RECORD_ADD";
    PermissionKey["TABLE_RECORD_DELETE"] = "TABLE_RECORD_DELETE";
    PermissionKey["RECORD_FIELD_EDIT"] = "RECORD_FIELD_EDIT";
})(PermissionKey || (exports.PermissionKey = PermissionKey = {}));
var PermissionGrantedType;
(function (PermissionGrantedType) {
    PermissionGrantedType["ROLE"] = "role";
    PermissionGrantedType["USER"] = "user";
    PermissionGrantedType["NOBODY"] = "nobody";
})(PermissionGrantedType || (exports.PermissionGrantedType = PermissionGrantedType = {}));
var PermissionEntity;
(function (PermissionEntity) {
    PermissionEntity["TABLE"] = "table";
    PermissionEntity["FIELD"] = "field";
})(PermissionEntity || (exports.PermissionEntity = PermissionEntity = {}));
var PermissionRole;
(function (PermissionRole) {
    PermissionRole["OWNER"] = "owner";
    PermissionRole["CREATOR"] = "creator";
    PermissionRole["EDITOR"] = "editor";
    PermissionRole["COMMENTER"] = "commenter";
    PermissionRole["VIEWER"] = "viewer";
})(PermissionRole || (exports.PermissionRole = PermissionRole = {}));
// Permission option values used across the application
var PermissionOptionValue;
(function (PermissionOptionValue) {
    PermissionOptionValue["VIEWERS_AND_UP"] = "viewers_and_up";
    PermissionOptionValue["EDITORS_AND_UP"] = "editors_and_up";
    PermissionOptionValue["CREATORS_AND_UP"] = "creators_and_up";
    PermissionOptionValue["SPECIFIC_USERS"] = "specific_users";
    PermissionOptionValue["NOBODY"] = "nobody";
})(PermissionOptionValue || (exports.PermissionOptionValue = PermissionOptionValue = {}));
exports.PermissionOptions = [
    {
        value: PermissionOptionValue.CREATORS_AND_UP,
        label: 'Creators & up',
        description: 'Members with Creator or Owner role',
        icon: 'role_creator',
    },
    {
        value: PermissionOptionValue.EDITORS_AND_UP,
        label: 'Editors & up',
        description: 'Members with Editor, Creator or Owner role',
        icon: 'role_editor',
        isDefault: true,
    },
    {
        value: PermissionOptionValue.VIEWERS_AND_UP,
        label: 'Viewers and up',
        description: 'Members with Viewer, Editor, Creator or Owner role',
        icon: 'role_viewer',
    },
    {
        value: PermissionOptionValue.SPECIFIC_USERS,
        label: 'Specific users',
        description: 'Specific set of members',
        icon: 'ncUsers',
    },
    {
        value: PermissionOptionValue.NOBODY,
        label: 'Nobody',
        description: 'No one can add records',
        icon: 'role_no_access',
    },
];
exports.PermissionRolePower = {
    [PermissionRole.OWNER]: 6,
    [PermissionRole.CREATOR]: 5,
    [PermissionRole.EDITOR]: 4,
    [PermissionRole.COMMENTER]: 3,
    [PermissionRole.VIEWER]: 2,
};
exports.PermissionRoleMap = {
    [enums_1.ProjectRoles.OWNER]: PermissionRole.OWNER,
    [enums_1.ProjectRoles.CREATOR]: PermissionRole.CREATOR,
    [enums_1.ProjectRoles.EDITOR]: PermissionRole.EDITOR,
    [enums_1.ProjectRoles.COMMENTER]: PermissionRole.COMMENTER,
    [enums_1.ProjectRoles.VIEWER]: PermissionRole.VIEWER,
    [enums_1.WorkspaceUserRoles.OWNER]: PermissionRole.OWNER,
    [enums_1.WorkspaceUserRoles.CREATOR]: PermissionRole.CREATOR,
    [enums_1.WorkspaceUserRoles.EDITOR]: PermissionRole.EDITOR,
    [enums_1.WorkspaceUserRoles.COMMENTER]: PermissionRole.COMMENTER,
    [enums_1.WorkspaceUserRoles.VIEWER]: PermissionRole.VIEWER,
};
exports.PermissionMeta = {
    [PermissionKey.TABLE_RECORD_ADD]: {
        minimumRole: PermissionRole.EDITOR,
        label: 'Who can create records',
        description: 'can create records',
        userSelectorDescription: 'Only members selected here will be able to create records.',
    },
    [PermissionKey.TABLE_RECORD_DELETE]: {
        minimumRole: PermissionRole.EDITOR,
        label: 'Who can delete records',
        description: 'can delete records',
        userSelectorDescription: 'Only members selected here will be able to delete records.',
    },
    [PermissionKey.RECORD_FIELD_EDIT]: {
        minimumRole: PermissionRole.EDITOR,
        label: 'Who can edit data in this field',
        description: 'can edit records',
        userSelectorDescription: 'Only members selected here will be able to edit values in the {{field}} field.',
    },
};
// Utility functions for permission management
const getPermissionOption = (value) => {
    return exports.PermissionOptions.find((option) => option.value === value);
};
exports.getPermissionOption = getPermissionOption;
const getPermissionLabel = (value) => {
    var _a;
    return ((_a = (0, exports.getPermissionOption)(value)) === null || _a === void 0 ? void 0 : _a.label) || 'Editors & up';
};
exports.getPermissionLabel = getPermissionLabel;
const getPermissionIcon = (value) => {
    var _a;
    return ((_a = (0, exports.getPermissionOption)(value)) === null || _a === void 0 ? void 0 : _a.icon) || 'role_editor';
};
exports.getPermissionIcon = getPermissionIcon;
const getPermissionOptionValue = (grantedType, grantedRole) => {
    if (grantedType === PermissionGrantedType.ROLE) {
        if (grantedRole === PermissionRole.VIEWER) {
            return PermissionOptionValue.VIEWERS_AND_UP;
        }
        else if (grantedRole === PermissionRole.CREATOR) {
            return PermissionOptionValue.CREATORS_AND_UP;
        }
        else {
            return PermissionOptionValue.EDITORS_AND_UP;
        }
    }
    else if (grantedType === PermissionGrantedType.USER) {
        return PermissionOptionValue.SPECIFIC_USERS;
    }
    else if (grantedType === PermissionGrantedType.NOBODY) {
        return PermissionOptionValue.NOBODY;
    }
    return PermissionOptionValue.EDITORS_AND_UP;
};
exports.getPermissionOptionValue = getPermissionOptionValue;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL3Blcm1pc3Npb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0NBQTREO0FBRTVELElBQVksYUFJWDtBQUpELFdBQVksYUFBYTtJQUN2QixzREFBcUMsQ0FBQTtJQUNyQyw0REFBMkMsQ0FBQTtJQUMzQyx3REFBdUMsQ0FBQTtBQUN6QyxDQUFDLEVBSlcsYUFBYSw2QkFBYixhQUFhLFFBSXhCO0FBRUQsSUFBWSxxQkFJWDtBQUpELFdBQVkscUJBQXFCO0lBQy9CLHNDQUFhLENBQUE7SUFDYixzQ0FBYSxDQUFBO0lBQ2IsMENBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUpXLHFCQUFxQixxQ0FBckIscUJBQXFCLFFBSWhDO0FBRUQsSUFBWSxnQkFHWDtBQUhELFdBQVksZ0JBQWdCO0lBQzFCLG1DQUFlLENBQUE7SUFDZixtQ0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxnQkFBZ0IsZ0NBQWhCLGdCQUFnQixRQUczQjtBQUVELElBQVksY0FNWDtBQU5ELFdBQVksY0FBYztJQUN4QixpQ0FBZSxDQUFBO0lBQ2YscUNBQW1CLENBQUE7SUFDbkIsbUNBQWlCLENBQUE7SUFDakIseUNBQXVCLENBQUE7SUFDdkIsbUNBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQU5XLGNBQWMsOEJBQWQsY0FBYyxRQU16QjtBQUVELHVEQUF1RDtBQUN2RCxJQUFZLHFCQU1YO0FBTkQsV0FBWSxxQkFBcUI7SUFDL0IsMERBQWlDLENBQUE7SUFDakMsMERBQWlDLENBQUE7SUFDakMsNERBQW1DLENBQUE7SUFDbkMsMERBQWlDLENBQUE7SUFDakMsMENBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQU5XLHFCQUFxQixxQ0FBckIscUJBQXFCLFFBTWhDO0FBVVksUUFBQSxpQkFBaUIsR0FBdUI7SUFDbkQ7UUFDRSxLQUFLLEVBQUUscUJBQXFCLENBQUMsZUFBZTtRQUM1QyxL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