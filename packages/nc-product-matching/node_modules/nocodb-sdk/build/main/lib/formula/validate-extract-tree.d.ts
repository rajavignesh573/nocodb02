import { ColumnType } from '../Api';
import { ParsedFormulaNode } from './operators';
import { SqlUiFactory } from '../sqlUi';
type SqlUI = ReturnType<(typeof SqlUiFactory)['create']>;
type ClientTypeOrSqlUI = 'mysql' | 'pg' | 'sqlite3' | 'mysql2' | 'oracledb' | 'mariadb' | 'sqlite' | 'snowflake' | SqlUI;
export declare function validateFormulaAndExtractTreeWithType({ formula, column, columns, clientOrSqlUi, getMeta, trackPosition, }: {
    formula: string;
    columns: ColumnType[];
    clientOrSqlUi: ClientTypeOrSqlUI;
    column?: ColumnType;
    getMeta: (tableId: string) => Promise<any>;
    trackPosition?: boolean;
}): Promise<ParsedFormulaNode>;
export {};
