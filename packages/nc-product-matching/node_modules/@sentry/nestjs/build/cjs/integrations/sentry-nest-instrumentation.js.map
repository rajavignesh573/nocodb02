{"version":3,"file":"sentry-nest-instrumentation.js","sources":["../../../src/integrations/sentry-nest-instrumentation.ts"],"sourcesContent":["import { isWrapped } from '@opentelemetry/core';\nimport type { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n} from '@opentelemetry/instrumentation';\nimport type { Span } from '@sentry/core';\nimport {\n  getActiveSpan,\n  isThenable,\n  SDK_VERSION,\n  startInactiveSpan,\n  startSpan,\n  startSpanManual,\n  withActiveSpan,\n} from '@sentry/core';\nimport { getMiddlewareSpanOptions, getNextProxy, instrumentObservable, isPatched } from './helpers';\nimport type { CallHandler, CatchTarget, InjectableTarget, MinimalNestJsExecutionContext, Observable } from './types';\n\nconst supportedVersions = ['>=8.0.0 <12'];\nconst COMPONENT = '@nestjs/common';\n\n/**\n * Custom instrumentation for nestjs.\n *\n * This hooks into\n * 1. @Injectable decorator, which is applied on class middleware, interceptors and guards.\n * 2. @Catch decorator, which is applied on exception filters.\n */\nexport class SentryNestInstrumentation extends InstrumentationBase {\n  public constructor(config: InstrumentationConfig = {}) {\n    super('sentry-nestjs', SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n  public init(): InstrumentationNodeModuleDefinition {\n    const moduleDef = new InstrumentationNodeModuleDefinition(COMPONENT, supportedVersions);\n\n    moduleDef.files.push(\n      this._getInjectableFileInstrumentation(supportedVersions),\n      this._getCatchFileInstrumentation(supportedVersions),\n    );\n    return moduleDef;\n  }\n\n  /**\n   * Wraps the @Injectable decorator.\n   */\n  private _getInjectableFileInstrumentation(versions: string[]): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/common/decorators/core/injectable.decorator.js',\n      versions,\n      (moduleExports: { Injectable: InjectableTarget }) => {\n        if (isWrapped(moduleExports.Injectable)) {\n          this._unwrap(moduleExports, 'Injectable');\n        }\n        this._wrap(moduleExports, 'Injectable', this._createWrapInjectable());\n        return moduleExports;\n      },\n      (moduleExports: { Injectable: InjectableTarget }) => {\n        this._unwrap(moduleExports, 'Injectable');\n      },\n    );\n  }\n\n  /**\n   * Wraps the @Catch decorator.\n   */\n  private _getCatchFileInstrumentation(versions: string[]): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/common/decorators/core/catch.decorator.js',\n      versions,\n      (moduleExports: { Catch: CatchTarget }) => {\n        if (isWrapped(moduleExports.Catch)) {\n          this._unwrap(moduleExports, 'Catch');\n        }\n        this._wrap(moduleExports, 'Catch', this._createWrapCatch());\n        return moduleExports;\n      },\n      (moduleExports: { Catch: CatchTarget }) => {\n        this._unwrap(moduleExports, 'Catch');\n      },\n    );\n  }\n\n  /**\n   * Creates a wrapper function for the @Injectable decorator.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _createWrapInjectable(): (original: any) => (options?: unknown) => (target: InjectableTarget) => any {\n    const SeenNestjsContextSet = new WeakSet<MinimalNestJsExecutionContext>();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function wrapInjectable(original: any) {\n      return function wrappedInjectable(options?: unknown) {\n        return function (target: InjectableTarget) {\n          // patch middleware\n          if (typeof target.prototype.use === 'function' && !target.__SENTRY_INTERNAL__) {\n            // patch only once\n            if (isPatched(target)) {\n              return original(options)(target);\n            }\n\n            target.prototype.use = new Proxy(target.prototype.use, {\n              apply: (originalUse, thisArgUse, argsUse) => {\n                const [req, res, next, ...args] = argsUse;\n\n                // Check that we can reasonably assume that the target is a middleware.\n                // Without these guards, instrumentation will fail if a function named 'use' on a service, which is\n                // decorated with @Injectable, is called.\n                if (!req || !res || !next || typeof next !== 'function') {\n                  return originalUse.apply(thisArgUse, argsUse);\n                }\n\n                const prevSpan = getActiveSpan();\n\n                return startSpanManual(getMiddlewareSpanOptions(target), (span: Span) => {\n                  // proxy next to end span on call\n                  const nextProxy = getNextProxy(next, span, prevSpan);\n                  return originalUse.apply(thisArgUse, [req, res, nextProxy, args]);\n                });\n              },\n            });\n          }\n\n          // patch guards\n          if (typeof target.prototype.canActivate === 'function' && !target.__SENTRY_INTERNAL__) {\n            // patch only once\n            if (isPatched(target)) {\n              return original(options)(target);\n            }\n\n            target.prototype.canActivate = new Proxy(target.prototype.canActivate, {\n              apply: (originalCanActivate, thisArgCanActivate, argsCanActivate) => {\n                const context = argsCanActivate[0];\n\n                if (!context) {\n                  return originalCanActivate.apply(thisArgCanActivate, argsCanActivate);\n                }\n\n                return startSpan(getMiddlewareSpanOptions(target), () => {\n                  return originalCanActivate.apply(thisArgCanActivate, argsCanActivate);\n                });\n              },\n            });\n          }\n\n          // patch pipes\n          if (typeof target.prototype.transform === 'function' && !target.__SENTRY_INTERNAL__) {\n            if (isPatched(target)) {\n              return original(options)(target);\n            }\n\n            target.prototype.transform = new Proxy(target.prototype.transform, {\n              apply: (originalTransform, thisArgTransform, argsTransform) => {\n                const value = argsTransform[0];\n                const metadata = argsTransform[1];\n\n                if (!value || !metadata) {\n                  return originalTransform.apply(thisArgTransform, argsTransform);\n                }\n\n                return startSpan(getMiddlewareSpanOptions(target), () => {\n                  return originalTransform.apply(thisArgTransform, argsTransform);\n                });\n              },\n            });\n          }\n\n          // patch interceptors\n          if (typeof target.prototype.intercept === 'function' && !target.__SENTRY_INTERNAL__) {\n            if (isPatched(target)) {\n              return original(options)(target);\n            }\n\n            target.prototype.intercept = new Proxy(target.prototype.intercept, {\n              apply: (originalIntercept, thisArgIntercept, argsIntercept) => {\n                const context = argsIntercept[0] as MinimalNestJsExecutionContext | undefined;\n                const next = argsIntercept[1] as CallHandler | undefined;\n\n                const parentSpan = getActiveSpan();\n                let afterSpan: Span | undefined;\n\n                if (\n                  !context ||\n                  !next ||\n                  typeof next.handle !== 'function' || // Check that we can reasonably assume that the target is an interceptor.\n                  target.name === 'SentryTracingInterceptor' // We don't want to trace this internal interceptor\n                ) {\n                  return originalIntercept.apply(thisArgIntercept, argsIntercept);\n                }\n\n                return startSpanManual(getMiddlewareSpanOptions(target), (beforeSpan: Span) => {\n                  // eslint-disable-next-line @typescript-eslint/unbound-method\n                  next.handle = new Proxy(next.handle, {\n                    apply: (originalHandle, thisArgHandle, argsHandle) => {\n                      beforeSpan.end();\n\n                      if (parentSpan) {\n                        return withActiveSpan(parentSpan, () => {\n                          const handleReturnObservable = Reflect.apply(originalHandle, thisArgHandle, argsHandle);\n\n                          if (!SeenNestjsContextSet.has(context)) {\n                            SeenNestjsContextSet.add(context);\n                            afterSpan = startInactiveSpan(\n                              getMiddlewareSpanOptions(target, 'Interceptors - After Route'),\n                            );\n                          }\n\n                          return handleReturnObservable;\n                        });\n                      } else {\n                        const handleReturnObservable = Reflect.apply(originalHandle, thisArgHandle, argsHandle);\n\n                        if (!SeenNestjsContextSet.has(context)) {\n                          SeenNestjsContextSet.add(context);\n                          afterSpan = startInactiveSpan(getMiddlewareSpanOptions(target, 'Interceptors - After Route'));\n                        }\n\n                        return handleReturnObservable;\n                      }\n                    },\n                  });\n\n                  let returnedObservableInterceptMaybePromise: Observable<unknown> | Promise<Observable<unknown>>;\n\n                  try {\n                    returnedObservableInterceptMaybePromise = originalIntercept.apply(thisArgIntercept, argsIntercept);\n                  } catch (e) {\n                    beforeSpan.end();\n                    afterSpan?.end();\n                    throw e;\n                  }\n\n                  if (!afterSpan) {\n                    return returnedObservableInterceptMaybePromise;\n                  }\n\n                  // handle async interceptor\n                  if (isThenable(returnedObservableInterceptMaybePromise)) {\n                    return returnedObservableInterceptMaybePromise.then(\n                      observable => {\n                        instrumentObservable(observable, afterSpan ?? parentSpan);\n                        return observable;\n                      },\n                      e => {\n                        beforeSpan.end();\n                        afterSpan?.end();\n                        throw e;\n                      },\n                    );\n                  }\n\n                  // handle sync interceptor\n                  if (typeof returnedObservableInterceptMaybePromise.subscribe === 'function') {\n                    instrumentObservable(returnedObservableInterceptMaybePromise, afterSpan);\n                  }\n\n                  return returnedObservableInterceptMaybePromise;\n                });\n              },\n            });\n          }\n\n          return original(options)(target);\n        };\n      };\n    };\n  }\n\n  /**\n   * Creates a wrapper function for the @Catch decorator. Used to instrument exception filters.\n   */\n  private _createWrapCatch() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function wrapCatch(original: any) {\n      return function wrappedCatch(...exceptions: unknown[]) {\n        return function (target: CatchTarget) {\n          if (typeof target.prototype.catch === 'function' && !target.__SENTRY_INTERNAL__) {\n            // patch only once\n            if (isPatched(target)) {\n              return original(...exceptions)(target);\n            }\n\n            target.prototype.catch = new Proxy(target.prototype.catch, {\n              apply: (originalCatch, thisArgCatch, argsCatch) => {\n                const exception = argsCatch[0];\n                const host = argsCatch[1];\n\n                if (!exception || !host) {\n                  return originalCatch.apply(thisArgCatch, argsCatch);\n                }\n\n                return startSpan(getMiddlewareSpanOptions(target), () => {\n                  return originalCatch.apply(thisArgCatch, argsCatch);\n                });\n              },\n            });\n          }\n\n          return original(...exceptions)(target);\n        };\n      };\n    };\n  }\n}\n"],"names":["InstrumentationBase","SDK_VERSION","InstrumentationNodeModuleDefinition","InstrumentationNodeModuleFile","isWrapped","isPatched","getActiveSpan","startSpanManual","getMiddlewareSpanOptions","getNextProxy","startSpan","withActiveSpan","startInactiveSpan","isThenable","instrumentObservable"],"mappings":"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"}