{"version":3,"file":"decorators.js","sources":["../../src/decorators.ts"],"sourcesContent":["import type { MonitorConfig } from '@sentry/core';\nimport { captureException, isThenable } from '@sentry/core';\nimport * as Sentry from '@sentry/node';\nimport { startSpan } from '@sentry/node';\nimport { isExpectedError } from './helpers';\n\n/**\n * A decorator wrapping the native nest Cron decorator, sending check-ins to Sentry.\n */\nexport const SentryCron = (monitorSlug: string, monitorConfig?: MonitorConfig): MethodDecorator => {\n  return (target: unknown, propertyKey, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value as (...args: unknown[]) => Promise<unknown>;\n\n    descriptor.value = function (...args: unknown[]) {\n      return Sentry.withMonitor(\n        monitorSlug,\n        () => {\n          let result;\n          try {\n            result = originalMethod.apply(this, args);\n          } catch (e) {\n            captureException(e);\n            throw e;\n          }\n          if (isThenable(result)) {\n            return result.then(undefined, e => {\n              captureException(e);\n              throw e;\n            });\n          }\n          return result;\n        },\n        monitorConfig,\n      );\n    };\n\n    copyFunctionNameAndMetadata({ originalMethod, descriptor });\n\n    return descriptor;\n  };\n};\n\n/**\n * A decorator usable to wrap arbitrary functions with spans.\n */\nexport function SentryTraced(op: string = 'function') {\n  return function (_target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value as (...args: unknown[]) => Promise<unknown> | unknown; // function can be sync or async\n\n    descriptor.value = function (...args: unknown[]) {\n      return startSpan(\n        {\n          op: op,\n          name: propertyKey,\n        },\n        () => {\n          return originalMethod.apply(this, args);\n        },\n      );\n    };\n\n    copyFunctionNameAndMetadata({ originalMethod, descriptor });\n\n    return descriptor;\n  };\n}\n\n/**\n * A decorator to wrap user-defined exception filters and add Sentry error reporting.\n */\nexport function SentryExceptionCaptured() {\n  return function (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalCatch = descriptor.value as (exception: unknown, host: unknown, ...args: unknown[]) => void;\n\n    descriptor.value = function (exception: unknown, host: unknown, ...args: unknown[]) {\n      if (isExpectedError(exception)) {\n        return originalCatch.apply(this, [exception, host, ...args]);\n      }\n\n      captureException(exception);\n      return originalCatch.apply(this, [exception, host, ...args]);\n    };\n\n    copyFunctionNameAndMetadata({ originalMethod: originalCatch, descriptor });\n\n    return descriptor;\n  };\n}\n\n/**\n * Copies the function name and metadata from the original method to the decorated method.\n * This ensures that the decorated method maintains the same name and metadata as the original.\n *\n * @param {Function} params.originalMethod - The original method being decorated\n * @param {PropertyDescriptor} params.descriptor - The property descriptor containing the decorated method\n */\nfunction copyFunctionNameAndMetadata({\n  originalMethod,\n  descriptor,\n}: {\n  descriptor: PropertyDescriptor;\n  originalMethod: (...args: unknown[]) => unknown;\n}): void {\n  // preserve the original name on the decorated function\n  Object.defineProperty(descriptor.value, 'name', {\n    value: originalMethod.name,\n    configurable: true,\n    enumerable: true,\n    writable: true,\n  });\n\n  // copy metadata\n  if (typeof Reflect !== 'undefined' && typeof Reflect.getMetadataKeys === 'function') {\n    const originalMetaData = Reflect.getMetadataKeys(originalMethod);\n    for (const key of originalMetaData) {\n      const value = Reflect.getMetadata(key, originalMethod);\n      Reflect.defineMetadata(key, value, descriptor.value);\n    }\n  }\n}\n"],"names":["captureException","isThenable","startSpan","isExpectedError"],"mappings":"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"}