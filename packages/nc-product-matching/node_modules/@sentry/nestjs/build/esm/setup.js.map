{"version":3,"file":"setup.js","sources":["../../src/setup.ts"],"sourcesContent":["import type {\n  ArgumentsHost,\n  CallHandler,\n  DynamicModule,\n  ExecutionContext,\n  HttpServer,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Catch, Global, HttpException, Injectable, Logger, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR, BaseExceptionFilter } from '@nestjs/core';\nimport { captureException, debug, getDefaultIsolationScope, getIsolationScope } from '@sentry/core';\nimport type { Observable } from 'rxjs';\nimport { isExpectedError } from './helpers';\n\n// Partial extract of FastifyRequest interface\n// https://github.com/fastify/fastify/blob/87f9f20687c938828f1138f91682d568d2a31e53/types/request.d.ts#L41\ninterface FastifyRequest {\n  routeOptions?: {\n    url?: string;\n  };\n  method?: string;\n}\n\n// Partial extract of ExpressRequest interface\ninterface ExpressRequest {\n  route?: {\n    path?: string;\n  };\n  method?: string;\n}\n\n/**\n * Note: We cannot use @ syntax to add the decorators, so we add them directly below the classes as function wrappers.\n */\n\n/**\n * Interceptor to add Sentry tracing capabilities to Nest.js applications.\n */\nclass SentryTracingInterceptor implements NestInterceptor {\n  // used to exclude this class from being auto-instrumented\n  public readonly __SENTRY_INTERNAL__: boolean;\n\n  public constructor() {\n    this.__SENTRY_INTERNAL__ = true;\n  }\n\n  /**\n   * Intercepts HTTP requests to set the transaction name for Sentry tracing.\n   */\n  public intercept(context: ExecutionContext, next: CallHandler): Observable<unknown> {\n    if (getIsolationScope() === getDefaultIsolationScope()) {\n      debug.warn('Isolation scope is still the default isolation scope, skipping setting transactionName.');\n      return next.handle();\n    }\n\n    if (context.getType() === 'http') {\n      const req = context.switchToHttp().getRequest() as FastifyRequest | ExpressRequest;\n      if ('routeOptions' in req && req.routeOptions?.url) {\n        // fastify case\n        getIsolationScope().setTransactionName(`${(req.method || 'GET').toUpperCase()} ${req.routeOptions.url}`);\n      } else if ('route' in req && req.route?.path) {\n        // express case\n        getIsolationScope().setTransactionName(`${(req.method || 'GET').toUpperCase()} ${req.route.path}`);\n      }\n    }\n\n    return next.handle();\n  }\n}\nInjectable()(SentryTracingInterceptor);\n\n/**\n * Global filter to handle exceptions and report them to Sentry.\n */\nclass SentryGlobalFilter extends BaseExceptionFilter {\n  public readonly __SENTRY_INTERNAL__: boolean;\n  private readonly _logger: Logger;\n\n  public constructor(applicationRef?: HttpServer) {\n    super(applicationRef);\n    this.__SENTRY_INTERNAL__ = true;\n    this._logger = new Logger('ExceptionsHandler');\n  }\n\n  /**\n   * Catches exceptions and reports them to Sentry unless they are expected errors.\n   */\n  public catch(exception: unknown, host: ArgumentsHost): void {\n    const contextType = host.getType<string>();\n\n    // The BaseExceptionFilter does not work well in GraphQL applications.\n    // By default, Nest GraphQL applications use the ExternalExceptionFilter, which just rethrows the error:\n    // https://github.com/nestjs/nest/blob/master/packages/core/exceptions/external-exception-filter.ts\n    if (contextType === 'graphql') {\n      // neither report nor log HttpExceptions\n      if (exception instanceof HttpException) {\n        throw exception;\n      }\n\n      if (exception instanceof Error) {\n        this._logger.error(exception.message, exception.stack);\n      }\n\n      captureException(exception);\n      throw exception;\n    }\n\n    // Handle microservice context (rpc)\n    // We cannot add proper handing here since RpcException depend on the @nestjs/microservices package\n    // For these cases we log a warning that the user should be providing a dedicated exception filter\n    if (contextType === 'rpc') {\n      // Unlikely case\n      if (exception instanceof HttpException) {\n        throw exception;\n      }\n\n      // Handle any other kind of error\n      if (!(exception instanceof Error)) {\n        if (!isExpectedError(exception)) {\n          captureException(exception);\n        }\n        throw exception;\n      }\n\n      // In this case we're likely running into an RpcException, which the user should handle with a dedicated filter\n      // https://github.com/nestjs/nest/blob/master/sample/03-microservices/src/common/filters/rpc-exception.filter.ts\n      if (!isExpectedError(exception)) {\n        captureException(exception);\n      }\n\n      this._logger.warn(\n        'IMPORTANT: RpcException should be handled with a dedicated Rpc exception filter, not the generic SentryGlobalFilter',\n      );\n\n      // Log the error and return, otherwise we may crash the user's app by handling rpc errors in a http context\n      this._logger.error(exception.message, exception.stack);\n      return;\n    }\n\n    // HTTP exceptions\n    if (!isExpectedError(exception)) {\n      captureException(exception);\n    }\n\n    return super.catch(exception, host);\n  }\n}\nCatch()(SentryGlobalFilter);\nexport { SentryGlobalFilter };\n\n/**\n * Set up a root module that can be injected in nest applications.\n */\nclass SentryModule {\n  /**\n   * Configures the module as the root module in a Nest.js application.\n   */\n  public static forRoot(): DynamicModule {\n    return {\n      module: SentryModule,\n      providers: [\n        {\n          provide: APP_INTERCEPTOR,\n          useClass: SentryTracingInterceptor,\n        },\n      ],\n    };\n  }\n}\nGlobal()(SentryModule);\nModule({\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: SentryTracingInterceptor,\n    },\n  ],\n})(SentryModule);\nexport { SentryModule };\n"],"names":[],"mappings":"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"}