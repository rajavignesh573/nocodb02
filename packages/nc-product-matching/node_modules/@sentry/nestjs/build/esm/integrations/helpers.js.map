{"version":3,"file":"helpers.js","sources":["../../../src/integrations/helpers.ts"],"sourcesContent":["import type { Span } from '@sentry/core';\nimport {\n  addNonEnumerableProperty,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  withActiveSpan,\n} from '@sentry/core';\nimport type { CatchTarget, InjectableTarget, NextFunction, Observable, Subscription } from './types';\n\nconst sentryPatched = 'sentryPatched';\n\n/**\n * Helper checking if a concrete target class is already patched.\n *\n * We already guard duplicate patching with isWrapped. However, isWrapped checks whether a file has been patched, whereas we use this check for concrete target classes.\n * This check might not be necessary, but better to play it safe.\n */\nexport function isPatched(target: InjectableTarget | CatchTarget): boolean {\n  if (target.sentryPatched) {\n    return true;\n  }\n\n  addNonEnumerableProperty(target, sentryPatched, true);\n  return false;\n}\n\n/**\n * Returns span options for nest middleware spans.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function getMiddlewareSpanOptions(target: InjectableTarget | CatchTarget, name: string | undefined = undefined) {\n  const span_name = name ?? target.name; // fallback to class name if no name is provided\n\n  return {\n    name: span_name,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'middleware.nestjs',\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.middleware.nestjs',\n    },\n  };\n}\n\n/**\n * Returns span options for nest event spans.\n */\nexport function getEventSpanOptions(event: string): {\n  name: string;\n  attributes: Record<string, string>;\n  forceTransaction: boolean;\n} {\n  return {\n    name: `event ${event}`,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'event.nestjs',\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.event.nestjs',\n    },\n    forceTransaction: true,\n  };\n}\n\n/**\n * Adds instrumentation to a js observable and attaches the span to an active parent span.\n */\nexport function instrumentObservable(observable: Observable<unknown>, activeSpan: Span | undefined): void {\n  if (activeSpan) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    observable.subscribe = new Proxy(observable.subscribe, {\n      apply: (originalSubscribe, thisArgSubscribe, argsSubscribe) => {\n        return withActiveSpan(activeSpan, () => {\n          const subscription: Subscription = originalSubscribe.apply(thisArgSubscribe, argsSubscribe);\n          subscription.add(() => activeSpan.end());\n          return subscription;\n        });\n      },\n    });\n  }\n}\n\n/**\n * Proxies the next() call in a nestjs middleware to end the span when it is called.\n */\nexport function getNextProxy(next: NextFunction, span: Span, prevSpan: undefined | Span): NextFunction {\n  return new Proxy(next, {\n    apply: (originalNext, thisArgNext, argsNext) => {\n      span.end();\n\n      if (prevSpan) {\n        return withActiveSpan(prevSpan, () => {\n          return Reflect.apply(originalNext, thisArgNext, argsNext);\n        });\n      } else {\n        return Reflect.apply(originalNext, thisArgNext, argsNext);\n      }\n    },\n  });\n}\n"],"names":[],"mappings":";;AASA,MAAM,aAAA,GAAgB,eAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,MAAM,EAA2C;AAC3E,EAAE,IAAI,MAAM,CAAC,aAAa,EAAE;AAC5B,IAAI,OAAO,IAAI;AACf;;AAEA,EAAE,wBAAwB,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC;AACvD,EAAE,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACO,SAAS,wBAAwB,CAAC,MAAM,EAAkC,IAAI,GAAuB,SAAS,EAAE;AACvH,EAAE,MAAM,SAAA,GAAY,QAAQ,MAAM,CAAC,IAAI,CAAA;;AAEvC,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,SAAS;AACnB,IAAI,UAAU,EAAE;AAChB,MAAM,CAAC,4BAA4B,GAAG,mBAAmB;AACzD,MAAM,CAAC,gCAAgC,GAAG,wBAAwB;AAClE,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACO,SAAS,mBAAmB,CAAC,KAAK;;AAIzC,CAAE;AACF,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,CAAA,4BAAA,GAAA,cAAA;AACA,MAAA,CAAA,gCAAA,GAAA,mBAAA;AACA,KAAA;AACA,IAAA,gBAAA,EAAA,IAAA;AACA,GAAA;AACA;;AAEA;AACA;AACA;AACA,SAAA,oBAAA,CAAA,UAAA,EAAA,UAAA,EAAA;AACA,EAAA,IAAA,UAAA,EAAA;AACA;AACA,IAAA,UAAA,CAAA,SAAA,GAAA,IAAA,KAAA,CAAA,UAAA,CAAA,SAAA,EAAA;AACA,MAAA,KAAA,EAAA,CAAA,iBAAA,EAAA,gBAAA,EAAA,aAAA,KAAA;AACA,QAAA,OAAA,cAAA,CAAA,UAAA,EAAA,MAAA;AACA,UAAA,MAAA,YAAA,GAAA,iBAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,aAAA,CAAA;AACA,UAAA,YAAA,CAAA,GAAA,CAAA,MAAA,UAAA,CAAA,GAAA,EAAA,CAAA;AACA,UAAA,OAAA,YAAA;AACA,SAAA,CAAA;AACA,OAAA;AACA,KAAA,CAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAA,YAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA;AACA,EAAA,OAAA,IAAA,KAAA,CAAA,IAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,YAAA,EAAA,WAAA,EAAA,QAAA,KAAA;AACA,MAAA,IAAA,CAAA,GAAA,EAAA;;AAEA,MAAA,IAAA,QAAA,EAAA;AACA,QAAA,OAAA,cAAA,CAAA,QAAA,EAAA,MAAA;AACA,UAAA,OAAA,OAAA,CAAA,KAAA,CAAA,YAAA,EAAA,WAAA,EAAA,QAAA,CAAA;AACA,SAAA,CAAA;AACA,OAAA,MAAA;AACA,QAAA,OAAA,OAAA,CAAA,KAAA,CAAA,YAAA,EAAA,WAAA,EAAA,QAAA,CAAA;AACA;AACA,KAAA;AACA,GAAA,CAAA;AACA;;;;"}