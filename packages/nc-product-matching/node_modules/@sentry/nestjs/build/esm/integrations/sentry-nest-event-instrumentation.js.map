{"version":3,"file":"sentry-nest-event-instrumentation.js","sources":["../../../src/integrations/sentry-nest-event-instrumentation.ts"],"sourcesContent":["import { isWrapped } from '@opentelemetry/core';\nimport type { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n} from '@opentelemetry/instrumentation';\nimport { captureException, SDK_VERSION, startSpan } from '@sentry/core';\nimport { getEventSpanOptions } from './helpers';\nimport type { OnEventTarget } from './types';\n\nconst supportedVersions = ['>=2.0.0'];\nconst COMPONENT = '@nestjs/event-emitter';\n\n/**\n * Custom instrumentation for nestjs event-emitter\n *\n * This hooks into the `OnEvent` decorator, which is applied on event handlers.\n */\nexport class SentryNestEventInstrumentation extends InstrumentationBase {\n  public constructor(config: InstrumentationConfig = {}) {\n    super('sentry-nestjs-event', SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n  public init(): InstrumentationNodeModuleDefinition {\n    const moduleDef = new InstrumentationNodeModuleDefinition(COMPONENT, supportedVersions);\n\n    moduleDef.files.push(this._getOnEventFileInstrumentation(supportedVersions));\n    return moduleDef;\n  }\n\n  /**\n   * Wraps the @OnEvent decorator.\n   */\n  private _getOnEventFileInstrumentation(versions: string[]): InstrumentationNodeModuleFile {\n    return new InstrumentationNodeModuleFile(\n      '@nestjs/event-emitter/dist/decorators/on-event.decorator.js',\n      versions,\n      (moduleExports: { OnEvent: OnEventTarget }) => {\n        if (isWrapped(moduleExports.OnEvent)) {\n          this._unwrap(moduleExports, 'OnEvent');\n        }\n        this._wrap(moduleExports, 'OnEvent', this._createWrapOnEvent());\n        return moduleExports;\n      },\n      (moduleExports: { OnEvent: OnEventTarget }) => {\n        this._unwrap(moduleExports, 'OnEvent');\n      },\n    );\n  }\n\n  /**\n   * Creates a wrapper function for the @OnEvent decorator.\n   */\n  private _createWrapOnEvent() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function wrapOnEvent(original: any) {\n      return function wrappedOnEvent(event: unknown, options?: unknown) {\n        // Get the original decorator result\n        const decoratorResult = original(event, options);\n\n        // Return a new decorator function that wraps the handler\n        return (target: OnEventTarget, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n          if (\n            !descriptor.value ||\n            typeof descriptor.value !== 'function' ||\n            target.__SENTRY_INTERNAL__ ||\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            descriptor.value.__SENTRY_INSTRUMENTED__\n          ) {\n            return decoratorResult(target, propertyKey, descriptor);\n          }\n\n          const originalHandler = descriptor.value;\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          const handlerName = originalHandler.name || propertyKey;\n          let eventName = typeof event === 'string' ? event : String(event);\n\n          // Instrument the actual handler\n          descriptor.value = async function (...args: unknown[]) {\n            // When multiple @OnEvent decorators are used on a single method, we need to get all event names\n            // from the reflector metadata as there is no information during execution which event triggered it\n            if (Reflect.getMetadataKeys(descriptor.value).includes('EVENT_LISTENER_METADATA')) {\n              const eventData = Reflect.getMetadata('EVENT_LISTENER_METADATA', descriptor.value);\n              if (Array.isArray(eventData)) {\n                eventName = eventData\n                  .map((data: unknown) => {\n                    if (data && typeof data === 'object' && 'event' in data && data.event) {\n                      return data.event;\n                    }\n                    return '';\n                  })\n                  .reverse() // decorators are evaluated bottom to top\n                  .join('|');\n              }\n            }\n\n            return startSpan(getEventSpanOptions(eventName), async () => {\n              try {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                const result = await originalHandler.apply(this, args);\n                return result;\n              } catch (error) {\n                // exceptions from event handlers are not caught by global error filter\n                captureException(error);\n                throw error;\n              }\n            });\n          };\n\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          descriptor.value.__SENTRY_INSTRUMENTED__ = true;\n\n          // Preserve the original function name\n          Object.defineProperty(descriptor.value, 'name', {\n            value: handlerName,\n            configurable: true,\n          });\n\n          // Apply the original decorator\n          return decoratorResult(target, propertyKey, descriptor);\n        };\n      };\n    };\n  }\n}\n"],"names":[],"mappings":"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"}