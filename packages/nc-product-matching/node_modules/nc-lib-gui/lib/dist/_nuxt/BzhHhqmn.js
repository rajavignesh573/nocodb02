import{e as b,T as y,I as h,o as O,w as e,b as a,eZ as w,a0 as B,a1 as C,L as n,es as S,eJ as P,d as r,t as m,eY as V}from"./DRA9KN5F.js";import{c as $}from"./CkvAmLZt.js";import"./D7OHpRdS.js";import"./DvtLu3FC.js";import"./D_txg4HT.js";import"./CQa0sIfA.js";import"./DkDj6Z7Z.js";import"./By5RWL3d.js";import"./gAYHr7Gr.js";const k=b({__name:"PgBinaryOptions",props:{value:{}},emits:["update:value"],setup(p,{emit:i}){const t=y(p,"value",i),{validateInfos:c,setAdditionalValidations:_}=$();return _({}),t.value.meta={format:"escape",...t.value.meta||{}},(o,s)=>{const l=P,u=S,d=B,f=w,g=V;return O(),h(g,{class:"my-2",gutter:8},{default:e(()=>[a(f,{span:24},{default:e(()=>[a(d,C(n(c)["meta.format"],{label:o.$t("labels.binaryEncodingFormat")}),{default:e(()=>[a(u,{value:n(t).meta.format,"onUpdate:value":s[0]||(s[0]=v=>n(t).meta.format=v),placeholder:o.$t("labels.binaryEncodingFormat"),class:"!w-full nc-link-singular"},{default:e(()=>[a(l,{value:"escape"},{default:e(()=>[r(m(o.$t("general.escape")),1)]),_:1}),a(l,{value:"hex"},{default:e(()=>[r(m(o.$t("general.hex")),1)]),_:1})]),_:1},8,["value","placeholder"])]),_:1},16,["label"])]),_:1})]),_:1})}}}),L=Object.assign(k,{__name:"SmartsheetColumnPgBinaryOptions"});export{L as default};
